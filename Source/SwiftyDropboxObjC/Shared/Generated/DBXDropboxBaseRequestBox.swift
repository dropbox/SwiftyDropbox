///
/// Copyright (c) 2022 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation
import SwiftyDropbox

extension DropboxBaseRequestBox {
    var objc: DBXRequest {
        switch self {
        case .filesalphaUpload(let swift):
            return DBXFilesAlphaUploadUploadRequest(swift: swift)
        case .filesdownload(let swift):
            return DBXFilesDownloadDownloadRequestFile(swift: swift)
        case .filesdownloadZip(let swift):
            return DBXFilesDownloadZipDownloadRequestFile(swift: swift)
        case .filesexport(let swift):
            return DBXFilesExportDownloadRequestFile(swift: swift)
        case .filesgetPreview(let swift):
            return DBXFilesGetPreviewDownloadRequestFile(swift: swift)
        case .filesgetThumbnail(let swift):
            return DBXFilesGetThumbnailDownloadRequestFile(swift: swift)
        case .filesgetThumbnailV2(let swift):
            return DBXFilesGetThumbnailDownloadRequestFileV2(swift: swift)
        case .filespaperCreate(let swift):
            return DBXFilesPaperCreateUploadRequest(swift: swift)
        case .filespaperUpdate(let swift):
            return DBXFilesPaperUpdateUploadRequest(swift: swift)
        case .filesupload(let swift):
            return DBXFilesUploadUploadRequest(swift: swift)
        case .filesuploadSessionAppendV2(let swift):
            return DBXFilesUploadSessionAppendUploadRequestV2(swift: swift)
        case .filesuploadSessionAppend(let swift):
            return DBXFilesUploadSessionAppendUploadRequest(swift: swift)
        case .filesuploadSessionFinish(let swift):
            return DBXFilesUploadSessionFinishUploadRequest(swift: swift)
        case .filesuploadSessionStart(let swift):
            return DBXFilesUploadSessionStartUploadRequest(swift: swift)
        case .paperdocsCreate(let swift):
            return DBXPaperDocsCreateUploadRequest(swift: swift)
        case .paperdocsDownload(let swift):
            return DBXPaperDocsDownloadDownloadRequestFile(swift: swift)
        case .paperdocsUpdate(let swift):
            return DBXPaperDocsUpdateUploadRequest(swift: swift)
        case .sharinggetSharedLinkFile(let swift):
            return DBXSharingGetSharedLinkFileDownloadRequestFile(swift: swift)
        default:
            fatalError("For Obj-C compatibility, add this route to the Objective-C compatibility module allow-list")
        }
    }
}
