///
/// Copyright (c) 2022 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation
import SwiftyDropbox

/// Objective-C compatible datatypes for the seen_state namespace
/// For Swift see seen_state

/// Possible platforms on which a user may view content.
@objc
public class DBXSeenStatePlatformType: NSObject {
    let swift: SeenState.PlatformType

    public init(swift: SeenState.PlatformType) {
        self.swift = swift
    }

    public static func factory(swift: SeenState.PlatformType) -> DBXSeenStatePlatformType {
        switch swift {
        case .web:
            return DBXSeenStatePlatformTypeWeb()
        case .desktop:
            return DBXSeenStatePlatformTypeDesktop()
        case .mobileIos:
            return DBXSeenStatePlatformTypeMobileIos()
        case .mobileAndroid:
            return DBXSeenStatePlatformTypeMobileAndroid()
        case .api:
            return DBXSeenStatePlatformTypeApi()
        case .unknown:
            return DBXSeenStatePlatformTypeUnknown()
        case .mobile:
            return DBXSeenStatePlatformTypeMobile()
        case .other:
            return DBXSeenStatePlatformTypeOther()
        }
    }

    @objc
    public override var description: String { swift.description }

    @objc
    public var asWeb: DBXSeenStatePlatformTypeWeb? {
        self as? DBXSeenStatePlatformTypeWeb
    }

    @objc
    public var asDesktop: DBXSeenStatePlatformTypeDesktop? {
        self as? DBXSeenStatePlatformTypeDesktop
    }

    @objc
    public var asMobileIos: DBXSeenStatePlatformTypeMobileIos? {
        self as? DBXSeenStatePlatformTypeMobileIos
    }

    @objc
    public var asMobileAndroid: DBXSeenStatePlatformTypeMobileAndroid? {
        self as? DBXSeenStatePlatformTypeMobileAndroid
    }

    @objc
    public var asApi: DBXSeenStatePlatformTypeApi? {
        self as? DBXSeenStatePlatformTypeApi
    }

    @objc
    public var asUnknown: DBXSeenStatePlatformTypeUnknown? {
        self as? DBXSeenStatePlatformTypeUnknown
    }

    @objc
    public var asMobile: DBXSeenStatePlatformTypeMobile? {
        self as? DBXSeenStatePlatformTypeMobile
    }

    @objc
    public var asOther: DBXSeenStatePlatformTypeOther? {
        self as? DBXSeenStatePlatformTypeOther
    }
}

/// The content was viewed on the web.
@objc
public class DBXSeenStatePlatformTypeWeb: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.web
        super.init(swift: swift)
    }
}

/// The content was viewed on a desktop client.
@objc
public class DBXSeenStatePlatformTypeDesktop: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.desktop
        super.init(swift: swift)
    }
}

/// The content was viewed on a mobile iOS client.
@objc
public class DBXSeenStatePlatformTypeMobileIos: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.mobileIos
        super.init(swift: swift)
    }
}

/// The content was viewed on a mobile android client.
@objc
public class DBXSeenStatePlatformTypeMobileAndroid: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.mobileAndroid
        super.init(swift: swift)
    }
}

/// The content was viewed from an API client.
@objc
public class DBXSeenStatePlatformTypeApi: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.api
        super.init(swift: swift)
    }
}

/// The content was viewed on an unknown platform.
@objc
public class DBXSeenStatePlatformTypeUnknown: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.unknown
        super.init(swift: swift)
    }
}

/// The content was viewed on a mobile client. DEPRECATED: Use mobile_ios or mobile_android instead.
@objc
public class DBXSeenStatePlatformTypeMobile: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.mobile
        super.init(swift: swift)
    }
}

/// An unspecified error.
@objc
public class DBXSeenStatePlatformTypeOther: DBXSeenStatePlatformType {
    @objc
    public init() {
        let swift = SeenState.PlatformType.other
        super.init(swift: swift)
    }
}
