///
/// Copyright (c) 2022 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation
import SwiftyDropbox

/// Objective-C compatible datatypes for the contacts namespace
/// For Swift see contacts

/// Objective-C compatible DeleteManualContactsArg struct
@objc
public class DBXContactsDeleteManualContactsArg: NSObject {
    /// List of manually added contacts to be deleted.
    @objc
    public var emailAddresses: [String] { swift.emailAddresses }

    @objc
    public init(emailAddresses: [String]) {
        self.swift = Contacts.DeleteManualContactsArg(emailAddresses: emailAddresses)
    }

    let swift: Contacts.DeleteManualContactsArg

    public init(swift: Contacts.DeleteManualContactsArg) {
        self.swift = swift
    }

    @objc
    public override var description: String { swift.description }
}

/// Objective-C compatible DeleteManualContactsError union
@objc
public class DBXContactsDeleteManualContactsError: NSObject {
    let swift: Contacts.DeleteManualContactsError

    public init(swift: Contacts.DeleteManualContactsError) {
        self.swift = swift
    }

    public static func factory(swift: Contacts.DeleteManualContactsError) -> DBXContactsDeleteManualContactsError {
        switch swift {
        case .contactsNotFound(let swiftArg):
            let arg = swiftArg
            return DBXContactsDeleteManualContactsErrorContactsNotFound(arg)
        case .other:
            return DBXContactsDeleteManualContactsErrorOther()
        }
    }

    @objc
    public override var description: String { swift.description }

    @objc
    public var asContactsNotFound: DBXContactsDeleteManualContactsErrorContactsNotFound? {
        self as? DBXContactsDeleteManualContactsErrorContactsNotFound
    }

    @objc
    public var asOther: DBXContactsDeleteManualContactsErrorOther? {
        self as? DBXContactsDeleteManualContactsErrorOther
    }
}

/// Can't delete contacts from this list. Make sure the list only has manually added contacts. The deletion was
/// cancelled.
@objc
public class DBXContactsDeleteManualContactsErrorContactsNotFound: DBXContactsDeleteManualContactsError {
    @objc
    public var contactsNotFound: [String]

    @objc
    public init(_ arg: [String]) {
        self.contactsNotFound = arg
        let swift = Contacts.DeleteManualContactsError.contactsNotFound(arg)
        super.init(swift: swift)
    }
}

/// An unspecified error.
@objc
public class DBXContactsDeleteManualContactsErrorOther: DBXContactsDeleteManualContactsError {
    @objc
    public init() {
        let swift = Contacts.DeleteManualContactsError.other
        super.init(swift: swift)
    }
}
