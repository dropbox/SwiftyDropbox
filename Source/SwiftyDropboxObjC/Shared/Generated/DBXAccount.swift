///
/// Copyright (c) 2022 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation
import SwiftyDropbox

/// Objective-C compatible datatypes for the account namespace
/// For Swift see account

/// Objective-C compatible PhotoSourceArg union
@objc
public class DBXAccountPhotoSourceArg: NSObject {
    let swift: Account.PhotoSourceArg

    public init(swift: Account.PhotoSourceArg) {
        self.swift = swift
    }

    public static func factory(swift: Account.PhotoSourceArg) -> DBXAccountPhotoSourceArg {
        switch swift {
        case .base64Data(let swiftArg):
            let arg = swiftArg
            return DBXAccountPhotoSourceArgBase64Data(arg)
        case .other:
            return DBXAccountPhotoSourceArgOther()
        }
    }

    @objc
    public override var description: String { swift.description }

    @objc
    public var asBase64Data: DBXAccountPhotoSourceArgBase64Data? {
        self as? DBXAccountPhotoSourceArgBase64Data
    }

    @objc
    public var asOther: DBXAccountPhotoSourceArgOther? {
        self as? DBXAccountPhotoSourceArgOther
    }
}

/// Image data in base64-encoded bytes.
@objc
public class DBXAccountPhotoSourceArgBase64Data: DBXAccountPhotoSourceArg {
    @objc
    public var base64Data: String

    @objc
    public init(_ arg: String) {
        self.base64Data = arg
        let swift = Account.PhotoSourceArg.base64Data(arg)
        super.init(swift: swift)
    }
}

/// An unspecified error.
@objc
public class DBXAccountPhotoSourceArgOther: DBXAccountPhotoSourceArg {
    @objc
    public init() {
        let swift = Account.PhotoSourceArg.other
        super.init(swift: swift)
    }
}

/// Objective-C compatible SetProfilePhotoArg struct
@objc
public class DBXAccountSetProfilePhotoArg: NSObject {
    /// Image to set as the user's new profile photo.
    @objc
    public var photo: DBXAccountPhotoSourceArg { DBXAccountPhotoSourceArg(swift: swift.photo) }

    @objc
    public init(photo: DBXAccountPhotoSourceArg) {
        self.swift = Account.SetProfilePhotoArg(photo: photo.swift)
    }

    let swift: Account.SetProfilePhotoArg

    public init(swift: Account.SetProfilePhotoArg) {
        self.swift = swift
    }

    @objc
    public override var description: String { swift.description }
}

/// Objective-C compatible SetProfilePhotoError union
@objc
public class DBXAccountSetProfilePhotoError: NSObject {
    let swift: Account.SetProfilePhotoError

    public init(swift: Account.SetProfilePhotoError) {
        self.swift = swift
    }

    public static func factory(swift: Account.SetProfilePhotoError) -> DBXAccountSetProfilePhotoError {
        switch swift {
        case .fileTypeError:
            return DBXAccountSetProfilePhotoErrorFileTypeError()
        case .fileSizeError:
            return DBXAccountSetProfilePhotoErrorFileSizeError()
        case .dimensionError:
            return DBXAccountSetProfilePhotoErrorDimensionError()
        case .thumbnailError:
            return DBXAccountSetProfilePhotoErrorThumbnailError()
        case .transientError:
            return DBXAccountSetProfilePhotoErrorTransientError()
        case .other:
            return DBXAccountSetProfilePhotoErrorOther()
        }
    }

    @objc
    public override var description: String { swift.description }

    @objc
    public var asFileTypeError: DBXAccountSetProfilePhotoErrorFileTypeError? {
        self as? DBXAccountSetProfilePhotoErrorFileTypeError
    }

    @objc
    public var asFileSizeError: DBXAccountSetProfilePhotoErrorFileSizeError? {
        self as? DBXAccountSetProfilePhotoErrorFileSizeError
    }

    @objc
    public var asDimensionError: DBXAccountSetProfilePhotoErrorDimensionError? {
        self as? DBXAccountSetProfilePhotoErrorDimensionError
    }

    @objc
    public var asThumbnailError: DBXAccountSetProfilePhotoErrorThumbnailError? {
        self as? DBXAccountSetProfilePhotoErrorThumbnailError
    }

    @objc
    public var asTransientError: DBXAccountSetProfilePhotoErrorTransientError? {
        self as? DBXAccountSetProfilePhotoErrorTransientError
    }

    @objc
    public var asOther: DBXAccountSetProfilePhotoErrorOther? {
        self as? DBXAccountSetProfilePhotoErrorOther
    }
}

/// File cannot be set as profile photo.
@objc
public class DBXAccountSetProfilePhotoErrorFileTypeError: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.fileTypeError
        super.init(swift: swift)
    }
}

/// File cannot exceed 10 MB.
@objc
public class DBXAccountSetProfilePhotoErrorFileSizeError: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.fileSizeError
        super.init(swift: swift)
    }
}

/// Image must be larger than 128 x 128.
@objc
public class DBXAccountSetProfilePhotoErrorDimensionError: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.dimensionError
        super.init(swift: swift)
    }
}

/// Image could not be thumbnailed.
@objc
public class DBXAccountSetProfilePhotoErrorThumbnailError: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.thumbnailError
        super.init(swift: swift)
    }
}

/// Temporary infrastructure failure, please retry.
@objc
public class DBXAccountSetProfilePhotoErrorTransientError: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.transientError
        super.init(swift: swift)
    }
}

/// An unspecified error.
@objc
public class DBXAccountSetProfilePhotoErrorOther: DBXAccountSetProfilePhotoError {
    @objc
    public init() {
        let swift = Account.SetProfilePhotoError.other
        super.init(swift: swift)
    }
}

/// Objective-C compatible SetProfilePhotoResult struct
@objc
public class DBXAccountSetProfilePhotoResult: NSObject {
    /// URL for the photo representing the user, if one is set.
    @objc
    public var profilePhotoUrl: String { swift.profilePhotoUrl }

    @objc
    public init(profilePhotoUrl: String) {
        self.swift = Account.SetProfilePhotoResult(profilePhotoUrl: profilePhotoUrl)
    }

    let swift: Account.SetProfilePhotoResult

    public init(swift: Account.SetProfilePhotoResult) {
        self.swift = swift
    }

    @objc
    public override var description: String { swift.description }
}
