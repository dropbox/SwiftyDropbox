///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation

public class DropboxBase {
    public var client: DropboxTransportClient

    /// Routes within the account namespace. See AccountRoutes for details.
    public var account: AccountRoutes!
    /// Routes within the auth namespace. See AuthRoutes for details.
    public var auth: AuthRoutes!
    /// Routes within the check namespace. See CheckRoutes for details.
    public var check: CheckRoutes!
    /// Routes within the contacts namespace. See ContactsRoutes for details.
    public var contacts: ContactsRoutes!
    /// Routes within the file_properties namespace. See FilePropertiesRoutes for details.
    public var file_properties: FilePropertiesRoutes!
    /// Routes within the file_requests namespace. See FileRequestsRoutes for details.
    public var file_requests: FileRequestsRoutes!
    /// Routes within the files namespace. See FilesRoutes for details.
    public var files: FilesRoutes!
    /// Routes within the openid namespace. See OpenidRoutes for details.
    public var openid: OpenidRoutes!
    /// Routes within the paper namespace. See PaperRoutes for details.
    public var paper: PaperRoutes!
    /// Routes within the sharing namespace. See SharingRoutes for details.
    public var sharing: SharingRoutes!
    /// Routes within the team_log namespace. See TeamLogRoutes for details.
    public var team_log: TeamLogRoutes!
    /// Routes within the users namespace. See UsersRoutes for details.
    public var users: UsersRoutes!

    public init(client: DropboxTransportClient) {
        self.client = client

        self.account = AccountRoutes(client: client)
        self.auth = AuthRoutes(client: client)
        self.check = CheckRoutes(client: client)
        self.contacts = ContactsRoutes(client: client)
        self.file_properties = FilePropertiesRoutes(client: client)
        self.file_requests = FileRequestsRoutes(client: client)
        self.files = FilesRoutes(client: client)
        self.openid = OpenidRoutes(client: client)
        self.paper = PaperRoutes(client: client)
        self.sharing = SharingRoutes(client: client)
        self.team_log = TeamLogRoutes(client: client)
        self.users = UsersRoutes(client: client)
    }
}
