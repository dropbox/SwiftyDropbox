///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

import Foundation

/// Routes for the auth namespace
/// For Objective-C compatible routes see DBAuthRoutes
public class AuthRoutes: DropboxTransportClientOwning {
    public let client: DropboxTransportClient
    required init(client: DropboxTransportClient) {
        self.client = client
    }

    /// Disables the access token used to authenticate the call. If there is a corresponding refresh token for the
    /// access token, this disables that refresh token, as well as any other access tokens for that refresh token.
    ///
    ///
    /// - returns: Through the response callback, the caller will receive a `Void` object on success or a `Void` object
    /// on failure.
    @discardableResult public func tokenRevoke() -> RpcRequest<VoidSerializer, VoidSerializer> {
        let route = Auth.tokenRevoke
        return client.request(route)
    }
}
